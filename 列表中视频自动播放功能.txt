

		RecyclerView列表中有视频，并且视频item完全显示出来时开始自动播放。
		
		
		
		以NiceVideoPlayer示例代码：
		
		
		//视频自动播放
        rvMain.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                switch (newState) {
                    case RecyclerView.SCROLL_STATE_SETTLING://惯性滚动
                        break;
                    case RecyclerView.SCROLL_STATE_IDLE://滚动停止
                        if (recyclerView == null) return;
                        autoPlayVideo(recyclerView);
                    case RecyclerView.SCROLL_STATE_DRAGGING://手指拖动
                        break;
                    default:
                        break;
                }
            }

            @Override
            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                
            }
        });
		
		rvMain.setRecyclerListener(new RecyclerView.RecyclerListener() {
            @Override
            public void onViewRecycled(RecyclerView.ViewHolder holder) {
                if (holder instanceof GameVideoViewBinder.ViewHolder) {
                    NiceVideoPlayer niceVideoPlayer = ((GameVideoViewBinder.ViewHolder) holder).nvpGameVideo;
                    if (niceVideoPlayer == NiceVideoPlayerManager.instance().getCurrentNiceVideoPlayer()) {
                        NiceVideoPlayerManager.instance().releaseNiceVideoPlayer();
                    }
                }
            }
        });
		
		
		/**
		 * 视频可见自动播放
		 */
		private void autoPlayVideo(RecyclerView view) {
        for (int i = 0; i < visibleCount; i++) {
            if (view != null && view.getChildAt(i) != null && view.getChildAt(i).findViewById(R.id.nvp_game_video) != null) {
                NiceVideoPlayer niceVideoPlayer = (NiceVideoPlayer) view.getChildAt(i).findViewById(R.id.nvp_game_video);
                Rect rect = new Rect();
                niceVideoPlayer.getLocalVisibleRect(rect);
                int videoHeight = niceVideoPlayer.getHeight();

                if (rect.top == 0 && rect.bottom == videoHeight) {
					//除非手动按暂停，否则就会自动播放
                    if (!niceVideoPlayer.isForcedToSuspend()) {
                        niceVideoPlayer.autoPlay();
                    }
                    return;
                }

            }
        }
		}
		
		
		
		@Override
		public void onStart() {
			registerHomeKeyPressedReceiver();
			NiceVideoPlayerManager.instance().resumeNiceVideoPlayer();
			super.onStart();
		}
		
		
		@Override
		public void onStop() {
			// 在OnStop中是release还是suspend播放器，需要看是不是因为按了Home键
			if (pressedHome) {
				NiceVideoPlayerManager.instance().suspendNiceVideoPlayer();
			}
			unRegisterHomeKeyPressedReceiver();
			super.onStop();
		}
		
		@Override
		protected void onDestroy() {
			//释放播放器
			releaseVideoPlayer();
			super.onDestroy();
		}

		/**
		 * 释放掉播放器
		 */
		private void releaseVideoPlayer() {
			NiceVideoPlayerManager.instance().releaseNiceVideoPlayer();
		}
	
		@Override
		public void onBackPressed() {
			if (NiceVideoPlayerManager.instance().onBackPressd()) return;
			super.onBackPressed();
		}

		