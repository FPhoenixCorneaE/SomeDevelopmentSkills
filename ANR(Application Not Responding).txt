ANR定义：

	在Android上，如果你的应用程序有一段时间响应不够灵敏，系统会向用户显示一个对话框，这个对话框称作应用程序无响应（ANR：

Application Not Responding）对话框。用户可以选择“等待”而让程序继续运行，也可以选择“强制关闭”。所以一个流畅的合理的应用程序中不

能出现anr，而让用户每次都要处理这个对话框。因此，在程序里对响应性能的设计很重要，这样系统不会显示ANR给用户。默认情况下，在android

中Activity的最长执行时间是5秒，BroadcastReceiver的最长执行时间则是10秒。



如何避免ANR？

	1.运行在主线程里的任何方法都尽可能少做事情：
	
		①Activity应该在它的关键生命周期方法（如onCreate()和onResume()）里尽可能少的去做创建操作。
		
		②潜在的耗时操作，例如网络或数据库操作，或者高耗时的计算如改变位图尺寸，应该在子线程里（或者以数据库操作为例，通过异步请求的方式）来完成。
		
		主线程应该为子线程提供一个Handler，以便完成时能够提交给主线程。
		
	2.在后台里做小的、琐碎的工作如保存设定或者注册一个Notification。避免在BroadcastReceiver里做耗时的操作或计算。避免在Intent Receiver里启动一个Activity。
	
	如果响应Intent广播需要执行一个耗时的动作的话，应用程序应该启动一个Service。如果你的应用程序在响应Intent广播时需要向用户展示什么，你应该使用Notification 
	
	Manager来实现。
	
	
	
	一般来说，在应用程序里，100到200ms是用户能感知阻滞的时间阈值。因此，这里有一些额外的技巧来避免ANR，并有助于让你的应用程序看起来有响应性。

如果你的应用程序为响应用户输入正在后台工作的话，可以显示工作的进度（ProgressBar和ProgressDialog对这种情况来说很有用）。特别是游戏，在子线程里做移动的计算。

如果你的应用程序有一个耗时的初始化过程的话，考虑可以显示一个Splash Screen或者快速显示主画面并异步来填充这些信息。在这两种情况下，你都应该显示正在进行的进度，

以免用户认为应用程序被冻结了。